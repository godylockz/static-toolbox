name: strace
on:
  workflow_dispatch
jobs:
    build-x86:
      name: Build strace x86
      runs-on: ubuntu-latest
      container: muslcc/x86_64:i686-linux-musl
      outputs:
        version: ${{ steps.build_strace.outputs.PACKAGED_VERSION }}
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install dependencies
          run: sudo apk update && sudo apk add bash && sudo bash build/install_deps_alpine.sh

        - name: Build strace
          id: build_strace
          run: $GITHUB_WORKSPACE/build/targets/build_strace.sh x86

        - name: Upload artifacts
          uses: actions/upload-artifact@v3
          with:
              name: ${{ steps.build_strace.outputs.PACKAGED_NAME }}
              path: ${{ steps.build_strace.outputs.PACKAGED_NAME_PATH }}

    build-x86_64:
      name: Build strace x86_64
      runs-on: ubuntu-latest
      container: muslcc/x86_64:x86_64-linux-musl
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install dependencies
          run: sudo apk update && sudo apk add bash && sudo bash build/install_deps_alpine.sh

        - name: Build strace
          id: build_strace
          run: $GITHUB_WORKSPACE/build/targets/build_strace.sh x86_64

        - name: Upload artifacts
          uses: actions/upload-artifact@v3
          with:
              name: ${{ steps.build_strace.outputs.PACKAGED_NAME }}
              path: ${{ steps.build_strace.outputs.PACKAGED_NAME_PATH }}

    build-armhf:
      name: Build strace ARMHF
      runs-on: ubuntu-latest
      container: muslcc/x86_64:arm-linux-musleabihf
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install dependencies
          run: sudo apk update && sudo apk add bash && sudo bash build/install_deps_alpine.sh

        - name: Build strace
          id: build_strace
          run: $GITHUB_WORKSPACE/build/targets/build_strace.sh armhf

        - name: Upload artifacts
          uses: actions/upload-artifact@v3
          with:
              name: ${{ steps.build_strace.outputs.PACKAGED_NAME }}
              path: ${{ steps.build_strace.outputs.PACKAGED_NAME_PATH }}

    build-aarch64:
      name: Build strace AARCH64
      runs-on: ubuntu-latest
      container: muslcc/x86_64:aarch64-linux-musl
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install dependencies
          run: sudo apk update && sudo apk add bash && sudo bash build/install_deps_alpine.sh

        - name: Build strace
          id: build_strace
          run: $GITHUB_WORKSPACE/build/targets/build_strace.sh aarch64

        - name: Upload artifacts
          uses: actions/upload-artifact@v3
          with:
              name: ${{ steps.build_strace.outputs.PACKAGED_NAME }}
              path: ${{ steps.build_strace.outputs.PACKAGED_NAME_PATH }}

    create-release:
      name: Create strace Release
      runs-on: ubuntu-latest
      needs: [build-x86, build-x86_64, build-armhf, build-aarch64]
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Prepare Environment
          run: mkdir /tmp/releases

        - name: Download Artifacts
          uses: actions/download-artifact@v3
          with:
            path: /tmp/releases

        - name: List Artifacts
          run: ls -laR /tmp/releases

        - name: Tag Release
          run: |
            set +e
            git fetch --quiet --prune --unshallow --tags
            if [[ $(git tag -l | grep strace-v${{ needs.build-x86.outputs.version }} | wc -l) -gt 0 ]]; then
              echo "Tag for strace-v${{ needs.build-x86.outputs.version }} already exists. Skipping release creation."
              echo "new_release=false" >> $GITHUB_ENV
            else
              git tag "strace-v${{ needs.build-x86.outputs.version }}"
              git push origin "strace-v${{ needs.build-x86.outputs.version }}"
              echo "new_release=true" >> $GITHUB_ENV
            fi

        - name: Create Release
          uses: ncipollo/release-action@v1
          if: ${{ env.new_release == 'true' }}
          with:
            name: strace-v${{ needs.build-x86.outputs.version }}
            tag: strace-v${{ needs.build-x86.outputs.version }}
            artifacts: "/tmp/releases/*/*"
            token: ${{ secrets.GITHUB_TOKEN }}